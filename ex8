#include "stm32g0xx.h"

/*Programa combinado:
Efeito selecionado pelas chaves PA0 e PA1:
-00: Exercício 5 (LED único indo e voltando)
-01: Exercício 6 (acende acumulando e depois apaga)
-10: Exercício 7 (pares/ímpares piscando rapidamente)
*/

int main() {
    //habilita clocks
    RCC->IOPENR = 0x3f;
    RCC->APBENR1 = 0x20;

    //configura PB0,PB1,PB2,PB3,PB4 como saída
    GPIOB->MODER = 0x155;
    //configura PC0,PC1,PC2 como saída
    GPIOC->MODER = 0x15;
    //configura PA0,PA1 como entrada
    GPIOA->MODER &= ~(0b1111); //zera MODER para PA0,PA1

    //Timer7 para ~100ms (ajustável)
    TIM7->PSC = 15999;
    TIM7->ARR = 999;
    TIM7->CR1 |= 0x01;

    int cont = 0;
    int estado = 0;

    while(1){
        //leitura das chaves (PA0 = bit0, PA1 = bit1)
        int chave = GPIOA->IDR & 0b11;

        if(TIM7->SR & 0b1){
            TIM7->SR ^= 0b1; //limpa flag
            cont++;
        }

        //---- limpa LEDs antes de trocar de modo ----
        if(chave == 0b10){ //modo 7 usa alternância rápida
            TIM7->ARR = 799; //~80ms
        } else {
            TIM7->ARR = 999; //~100ms
        }

        //seleção de efeito
        if(chave == 0b00){
            //==== Exercício 5 ====
            if(cont == 2){
                GPIOB->ODR = 0b000001; GPIOC->ODR = 0;
            }
            if(cont == 4){
                GPIOB->ODR = 0b000010; GPIOC->ODR = 0;
            }
            if(cont == 6){
                GPIOB->ODR = 0b000100; GPIOC->ODR = 0;
            }
            if(cont == 8){
                GPIOB->ODR = 0; GPIOC->ODR = 0b001;
            }
            if(cont == 10){
                GPIOC->ODR = 0b010;
            }
            if(cont == 12){
                GPIOC->ODR = 0b100;
            }
            if(cont == 14){
                GPIOC->ODR = 0; GPIOB->ODR = 0b01000;
            }
            if(cont == 16){
                GPIOB->ODR = 0b10000;
            }
            if(cont == 18){
                GPIOB->ODR = 0b01000;
            }
            if(cont == 20){
                GPIOB->ODR = 0; GPIOC->ODR = 0b100;
            }
            if(cont == 22){
                GPIOC->ODR = 0b010;
            }
            if(cont == 24){
                GPIOC->ODR = 0b001;
            }
            if(cont == 26){
                GPIOC->ODR = 0; GPIOB->ODR = 0b000100;
            }
            if(cont == 28){
                GPIOB->ODR = 0b000010;
            }
            if(cont == 30){
                GPIOB->ODR = 0b000001;
                cont = 0;
            }
        }
        else if(chave == 0b01){
            //==== Exercício 6 ====
            if(cont == 2){
                GPIOB->ODR |= 0b000001;
            }
            if(cont == 4){
                GPIOB->ODR |= 0b000010;
            }
            if(cont == 6){
                GPIOB->ODR |= 0b000100;
            }
            if(cont == 8){
                GPIOC->ODR |= 0b001;
            }
            if(cont == 10){
                GPIOC->ODR |= 0b010;
            }
            if(cont == 12){
                GPIOC->ODR |= 0b100;
            }
            if(cont == 14){
                GPIOB->ODR |= 0b01000;
            }
            if(cont == 16){
                GPIOB->ODR |= 0b10000;
            }
            if(cont == 18){
                GPIOB->ODR &= ~0b10000;
            }
            if(cont == 20){
                GPIOB->ODR &= ~0b01000;
            }
            if(cont == 22){
                GPIOC->ODR &= ~0b100;
            }
            if(cont == 24){
                GPIOC->ODR &= ~0b010;
            }
            if(cont == 26){
                GPIOC->ODR &= ~0b001;
            }
            if(cont == 28){
                GPIOB->ODR &= ~0b000100;
            }
            if(cont == 30){
                GPIOB->ODR &= ~0b000010;
            }
            if(cont == 32){
                GPIOB->ODR &= ~0b000001;
                cont = 0;
            }
        }
        else if(chave == 0b10){
            //==== Exercício 7 ====
            if(estado == 0){
                GPIOB->ODR = 0; GPIOC->ODR = 0;
                GPIOB->ODR |= (0b000010 | 0b01000); //PB1,PB3
                GPIOC->ODR |= (0b001 | 0b100); //PC0,PC2
                estado = 1;
            }
            else{
                GPIOB->ODR = 0; GPIOC->ODR = 0;
                GPIOB->ODR |= (0b000001 | 0b000100 | 0b10000); //PB0,PB2,PB4
                GPIOC->ODR |= (0b010); //PC1
                estado = 0;
            }
        }
    }
}
